<?xml version="1.0"?>
<!--
   $Id$

   Copyright (C) GNU/GPL AVOIR 2007
   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->
<project name="chisimba_framework"  basedir="." default="build">

  <!-- the properties below can be customised to suit your own environment by providing a 
       build.properties file and overriding them -->
  
  <!-- local location that will contain the archives generated by this build -->
  <property name="build.dir" value="build"/>
  <!-- version string that will get appended to archive file names -->
  <property name="version" value="nightly"/>
  <!-- base archive name (i.e. without file suffix and version string) -->
  <property name="base.archive.file.name" value="chisimba_framework_${version}"/>
  <!-- base api doc archive name (i.e. without file suffix and version string) -->
  <property name="base.apidoc.file.name" value="chisimba_apidocs_${version}"/>
  <!-- local folder where the built archives will be copied to during deployment -->
  <property name="local.deploy.dir" value="/var/www/chisimba_nightly"/>
  
  <!-- the properties below here shouldn't typically be overridden or changed -->
  
  <!-- name of tar file generated by build -->
  <property name="tarfile" value="${build.dir}/${base.archive.file.name}.tgz"/>
  <!-- name of zip file generated by build -->
  <property name="zipfile" value="${build.dir}/${base.archive.file.name}.zip"/>
  
  <!-- API doc file name -->
  <property name="apidoczipfile" value="${build.dir}/${base.apidoc.file.name}.zip"/>
  <property name="apidoctarfile" value="${build.dir}/${base.apidoc.file.name}.tgz"/>
  
  <!-- Lets set up the svn export and directory for the build -->
  <property name="exportdir"  value="${build.dir}" />
  <property name="svnpath" value="/usr/bin/svn" />
  <property name="username" value="anon" />
  <property name="password" value="anon" />
  <property name="repo" value="https://cvs2.uwc.ac.za/chisimba/framework/trunk/" />
  
  <!-- set of files that should and shouldn't end up in archive files generated by build -->
  <fileset dir="${build.dir}/app/" id="archive.files">
    <include name="**/**"/>
    <exclude name="CVS/**"/>
    <exclude name="CVSROOT/**"/>
    <exclude name="build/**"/>
    <exclude name="build.xml"/>
    <exclude name="countlines.pl"/>
    <exclude name="cvs2cl"/>
    <exclude name="cvschangelogbuilder.pl"/>
    <exclude name="package-config.php"/>
    <exclude name="pearpacker.php"/>
    <exclude name="update.sh"/>
    <exclude name=".svn" />
    
    <!-- we only want echo skin but no way to exclude all skins except echo, so instead
         we have to explicitly exclude the others -->
    <exclude name="app/skins/alien/**"/>
    <exclude name="app/skins/bluesimba/**"/>
    <exclude name="app/skins/classroom/**"/>
    <exclude name="app/skins/consolglass/**"/>
    <exclude name="app/skins/digfreedom/**"/>
    <exclude name="app/skins/freecourseware/**"/>
    <exclude name="app/skins/Freecourseware/**"/>
    <exclude name="app/skins/madiba/**"/>
    <exclude name="app/skins/madibawide/**"/>
    <exclude name="app/skins/meritunu/**"/>
    <exclude name="app/skins/sems/**"/>
    <exclude name="app/skins/tabeisa/**"/>
    <exclude name="app/skins/uonbi/**"/>
    
    <!-- until these are removed from CVS we exclude them from archives -->
    <exclude name="app/skins/echo/echo_psds/**"/>
    
    <exclude name="app/tests/**"/>
  </fileset>
  
  
  <target name="clean" description="Removes any files generated by this build">
    <delete dir="${build.dir}" includeemptydirs="true"  verbose="true"/>
  </target>
  
  <target name="init" description="Performs any initialisation steps required by this build">
    <mkdir dir="${build.dir}"/>
    
  </target>
  
  <target name="svnexport">
    <svnexport
       svnpath="${svnpath}"
       username="${username}"
       password="${password}"
       nocache="true"
       force="true"
       repositoryurl="${repo}"
       todir="${exportdir}"/>
  </target>

  <!-- Start the actual build(s) -->
  <target name="build" description="Generates .tgz and .zip file containing framework" 
          depends="init, lint, apidocs, build-tgz, build-zip, apidoc-zip, apidoc-tgz">
  </target>
  
  <!-- Perform lintian task on the code - HALT on Failure! -->
  <target name="lint" description="Performs a lintian check (syntax check) on all the code going into the archive(s)" depends="init, svnexport">
    <phplint haltonfailure="true">
      <fileset dir="${build.dir}/app/">
        <include name="**/*.php"/>
      </fileset>
    </phplint>
  </target>
  
  <!-- Generate the API dox -->
  <target name="apidocs" description="Generates the PHPDocumetor API docs for the framework" depends="init, svnexport, lint">
    <phpdoc title="API Documentation" destdir="apidocs" sourcecode="yes" output="HTML:Smarty:PHP">
     <fileset dir="${build.dir}/app/">
        <include name="**/*.php" />
        <!-- exclude the pear stuff -->
	<exclude name="${build.dir}/app/lib/pear/**" />
     </fileset>
     <projdocfileset dir=".">
        <include name="README" />
        <include name="INSTALL" />
        <include name="CHANGELOG" />
     </projdocfileset>
    </phpdoc>
  </target>
  
  <target name="build-tgz" description="Generates .tgz file containing framework" depends="init,svnexport, lint, apidocs">
    <tar destfile="${tarfile}" compression="gzip">
      <fileset dir="${build.dir}/app/"/>
    </tar>
  </target>
  
  <target name="build-zip" description="Generates .zip file containing framework" depends="init, svnexport, lint, apidocs">
    <zip destfile="${zipfile}">
      <fileset dir="${build.dir}/app/"/>
    </zip>
  </target>
  
  <target name="apidoc-zip" description="Generates .zip file containing the API docs" depends="init, apidocs">
    <zip destfile="${apidoczipfile}">
      <fileset dir="apidocs/"/>
    </zip>
  </target>
  
  <target name="apidoc-tgz" description="Generates .tgz file containing the API docs" depends="init, apidocs">
    <tar destfile="${apidoctarfile}" compression="gzip">
      <fileset dir="apidocs/"/>
    </tar>
  </target>
  
  <!-- Deploy targets - local first, then remotes -->
  <!-- Local build target -->
  <target name="deploy-local" description="Copies archives to local folder" depends="init,build">
    <copy file="${tarfile}" todir="." overwrite="true"/>
    <copy file="${zipfile}" todir="." overwrite="true"/>
    <copy file="${apidoczipfile}" todir="." overwrite="true"/>
    <copy file="${apidoctarfile}" todir="." overwrite="true"/>
  </target>

</project>
